{
  "author" : "makejava",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "ESS",
  "currTemplateGroupName" : "ESS-MVC-ST-API",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "ESS",
  "typeMapper" : {
    "ESS" : {
      "name" : "ESS",
      "elementList" : [ {
        "matchType" : "REGEX",
        "columnType" : "varchar(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "char(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|medium|long)*text",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "decimal(\\(\\d+,\\d+\\))?",
        "javaType" : "java.lang.Double"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "integer",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|small|medium)*int(\\(\\d+\\))?",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int4",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int8",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "REGEX",
        "columnType" : "bigint(\\(\\d+\\))?",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "date",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "datetime",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "timestamp",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "time",
        "javaType" : "java.time.LocalTime"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "boolean",
        "javaType" : "java.lang.Boolean"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "float",
        "javaType" : "java.lang.Float"
      } ]
    }
  },
  "template" : {
    "ESS-MVC-SI-API" : {
      "name" : "ESS-MVC-SI-API",
      "elementList" : [ {
        "name" : "Model.java.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model;\n\nimport $!{coreBasePackage}.model.Model;\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n//@JsonInclude(JsonInclude.Include.NON_NULL)\n@ApiModel(value = \"$!{tableInfo.name}\", description = \"$!{tableInfo.comment}-模型类\")\npublic class $!{tableInfo.name} implements Model<$!pk.shortType> {\n\n#if(${pk.comment})\n     // ${pk.comment}\n#end\n\t@ApiModelProperty(value = \"$!{pk.comment}\")\n\tprivate $!pk.shortType $!pk.name;\n\t\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n\t@ApiModelProperty(value = \"$!{column.comment}#if(${column.shortType}==\"Date\"), 格式:yyyy-MM-dd#end#if(${column.shortType}==\"Timestamp\"), 格式:yyyy-MM-dd HH:mm:ss#end\")\n#if(${column.shortType}==\"Date\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd\")\n#end\n#if(${column.shortType}==\"Timestamp\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd HH:mm:ss\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public $!pk.shortType getKey() {\n        return this.$!pk.name;\n    }\n}\n"
      }, {
        "name" : "Define.xml.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入mybatis支持\n$!{mybatisSupport.vm}\n##引入init支持\n$!{init.vm}\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"DefineMapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper/$!{tableInfo.name}\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.name}Define\">\n\n\t<!--添加数据开始-->\n\t<sql id=\"insertDefine\">\n\t\tinsert into $!{tableInfo.obj.name} \n\t\t<trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\n#if(!($!{pk.shortType}=='Long' || $!{pk.shortType}=='Integer'))\n\t\t\t$!pk.obj.name,\n#end\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t<if test=\"$!{column.name} != null\">$!{column.obj.name},</if>\n#end\n\t\t</trim>\n\t\t<trim prefix=\"VALUES (\" suffix=\")\" suffixOverrides=\",\">\n#if(!($!{pk.shortType}=='Long' || $!{pk.shortType}=='Integer'))\n\t\t\t#{$!pk.name},\n#end\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t<if test=\"$!{column.name} != null\">#{$!{column.name}},</if>\n#end\n\t\t</trim>\n\t</sql>\n\t<!--添加数据结束-->\n\n\t<!--修改数据开始-->\n\t<sql id=\"updateDefine\">\n\t\tupdate $!{tableInfo.obj.name} \n\t\t<set>\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t<if test=\"m.$!{column.name} != null\">$!{column.obj.name} = #{m.$!{column.name}},</if>\n#end\n\t\t</set>\n\t\twhere $!pk.obj.name = #{k}\n\t</sql>\n\t<!--修改数据结束-->\n\n\t<!--全量修改数据开始-->\n\t<sql id=\"updateAllDefine\">\n\t\tupdate $!{tableInfo.obj.name} \n\t\t<set>\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t$!{column.obj.name} = #{m.$!{column.name}},\n#end\n\t\t</set>\n\t\twhere $!pk.obj.name = #{k}\n\t</sql>\n\t<!--全量修改数据结束-->\n\t\n\t<!--删除数据开始-->\n\t<sql id=\"deleteDefine\">\n\t\tdelete from $!{tableInfo.obj.name} where $!pk.obj.name = #{k}\n\t</sql>\n\t<!--删除数据结束-->\n\t\n    <!--批量删除数据开始-->\n    <sql id=\"deleteMultiDefine\">\n        delete from $!{tableInfo.obj.name} \n        <where>\n            <if test=\"ks != null\">\n                $!pk.obj.name in\n                <foreach collection=\"ks\" item=\"k\" index=\"no\" open=\"(\" separator=\",\" close=\")\">\n                    #{k}\n                </foreach>\n            </if>\n            <if test=\"ks == null\">\n                1=2\n            </if>\n        </where>\n    </sql>\n    <!--批量删除数据结束-->\n    \n</mapper>\n"
      }, {
        "name" : "Mapper.xml.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入mybatis支持\n$!{mybatisSupport.vm}\n##引入init支持\n$!{init.vm}\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"AppMapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper/$!{tableInfo.name}\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao\">\n\n\t<!--查询详情数据开始-->\n\t<select id=\"load\" parameterType=\"$!pk.Type\" resultType=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\">\n\t\tSELECT \n\t\t\t#allSqlColumn() \n\t\t\n\t\tFROM $!{tableInfo.obj.name} \n\t\twhere $!pk.obj.name = #{k}\n\t</select>\n\t<!--查询详情数据结束-->\n\t\n\t<!--查询列表数据开始-->\n\t<select id=\"query\" parameterType=\"$!{coreBasePackage}.model.QueryParameter\" resultType=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\">\n\t\tSELECT \n\t\t\t#allSqlColumn() \n\t\t\n\t\tFROM $!{tableInfo.obj.name} \n\t\t<where>\n\t\t\t1=1\n\t\t</where>\n\t\t ${q.sort} \n\t</select>\n\t<!--查询列表数据结束-->\n\n\t<!--查询列数量开始-->\n\t<select id=\"count\" parameterType=\"$!{coreBasePackage}.model.QueryParameter\" resultType=\"java.lang.Integer\">\n\t\tSELECT \n\t\t\tcount($!{pk.obj.name}) \n\t\tFROM $!{tableInfo.obj.name} \n\t\t<where>\n\t\t\t1=1\n\t\t</where>\n\t</select>\n\t<!--查询数量结束-->\n\t\n\t\n\t<!--新增数据开始-->\n\t<insert id=\"insert\" parameterType=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\"#if($!{pk.shortType}=='Long' || $!{pk.shortType}=='Integer' ) useGeneratedKeys=\"true\" keyColumn=\"$!pk.obj.name\" keyProperty=\"$!pk.name\"#end>\n#if($!{pk.shortType}=='String')\n\t\t<selectKey resultType=\"java.lang.String\" keyColumn=\"$!pk.obj.name\" keyProperty=\"$!pk.name\" order=\"BEFORE\" >\n\t\t\tSELECT REPLACE(UUID(), '-', '') FROM DUAL\n\t\t</selectKey>\n#end\n\t\t<include refid=\"$!{tableInfo.name}Define.insertDefine\"/>\n\t</insert>\n\t<!--新增数据结束-->\n\n\t<!--修改数据开始-->\n\t<update id=\"update\" parameterType=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\">\n\t\t<include refid=\"$!{tableInfo.name}Define.updateDefine\"/>\n\t</update>\n\t<!--修改数据结束-->\n\t\n\t<!--全量修改数据开始-->\n\t<update id=\"updateAll\" parameterType=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\">\n\t\t<include refid=\"$!{tableInfo.name}Define.updateAllDefine\"/>\n\t</update>\n\t<!--全量修改数据结束-->\n\t\n    <!--删除数据开始-->\n    <delete id=\"delete\" parameterType=\"$!pk.Type\">\n        <include refid=\"$!{tableInfo.name}Define.deleteDefine\"/>\n    </delete>\n\t<!--删除数据结束-->\n\n    <!--删除数据开始-->\n    <delete id=\"deleteMulti\" parameterType=\"java.util.List\">\n        <include refid=\"$!{tableInfo.name}Define.deleteMultiDefine\"/>\n    </delete>\n\t<!--删除数据结束-->\n\t\n\t<!--通过Key集合查询列表数据开始-->\n\t<select id=\"list\" resultType=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\">\n\t\tSELECT \n\t\t\t#allSqlColumn() \n\t\t\n\t\tFROM $!{tableInfo.obj.name} \n        <where>\n            <if test=\"ks != null\">\n                ${fn} in\n                <foreach collection=\"ks\" item=\"k\" index=\"no\" open=\"(\" separator=\",\" close=\")\">\n                    #{k}\n                </foreach>\n            </if>\n            <if test=\"ks == null\">\n                1=2\n            </if>\n        </where>\n\t</select>\n\t<!--通过Key集合查询列表数据结束-->\n\n</mapper>\n"
      }, {
        "name" : "Dao.java.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}Dao.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/dao\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;\n\nimport $!{coreBasePackage}.pattern.mvc.simple.dao.BaseDao;\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\nimport org.apache.ibatis.annotations.Mapper;\n\n@Mapper\npublic interface $!{tableInfo.name}Dao extends BaseDao<$!pk.shortType, $!{tableInfo.name}> {\n}\n\n"
      }, {
        "name" : "Service.java.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}Service.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{coreBasePackage}.pattern.mvc.simple.service.BaseService;\nimport $!{coreBasePackage}.sercurity.AuthorizationUser;\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\n\npublic interface $!{tableInfo.name}Service extends BaseService<$!pk.shortType, $!{tableInfo.name}> {\n#foreach($column in $tableInfo.fullColumn)\n    String $!{column.name} = \"$!{column.obj.name}\";\n#end\n}\n\n"
      }, {
        "name" : "ServiceImpl.java.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}ServiceImpl.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport $!{coreBasePackage}.pattern.mvc.simple.service.AbstractService;\nimport $!{coreBasePackage}.pattern.mvc.simple.dao.BaseDao;\nimport $!{coreBasePackage}.sercurity.AuthorizationUser;\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\n\n@Service\n@Slf4j\npublic class $!{tableInfo.name}ServiceImpl extends AbstractService<$!pk.shortType, $!{tableInfo.name}> implements $!{tableInfo.name}Service {\n    \n    @Resource\n    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;\n    \n    \n    @Override\n    public BaseDao<$!pk.shortType, $!{tableInfo.name}> getDao() {\n        return this.$!tool.firstLowerCase($!{tableInfo.name})Dao;\n    }\n}\n\n"
      }, {
        "name" : "Controller.java.vm",
        "code" : "##引入基本设置\n$!{siApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}Controller.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport $!{coreBasePackage}.argument.SwaggerParam;\nimport $!{coreBasePackage}.argument.UserParam;\nimport $!{coreBasePackage}.model.Page;\nimport $!{coreBasePackage}.model.QueryParameter;\nimport $!{coreBasePackage}.model.ResponseModel;\nimport $!{coreBasePackage}.pattern.mvc.simple.controller.BaseRest;\nimport $!{coreBasePackage}.sercurity.AuthorizationUser;\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiImplicitParam;\nimport io.swagger.annotations.ApiImplicitParams;\nimport io.swagger.annotations.ApiOperation;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.PatchMapping;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RestController;\nimport javax.annotation.Resource;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@Api(value = \"$!{tableInfo.name}Controller\", tags = {\"$!{tableInfo.comment}-接口\"})\n@RequestMapping(\"$!tool.firstLowerCase($!{tableInfo.name})s\")\n@Slf4j\npublic class $!{tableInfo.name}Controller implements BaseRest {\n\t\n\t@Resource\n    private $!{tableInfo.name}Service $!tool.firstLowerCase($!{tableInfo.name})Service;\n\t\n\t@ApiOperation(value = \"查询$!{tableInfo.comment}列表\", notes = \"查询$!{tableInfo.comment}列表\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = Page.PAGE_NUM_PARAM_NAME, value = \"页序号\", paramType = \"query\", dataType = \"Int\"),\n        @ApiImplicitParam(name = Page.PAGE_SIZE_PARAM_NAME, value = \"页大小\", paramType = \"query\", dataType = \"Int\"),\n\t\t@ApiImplicitParam(name = QueryParameter.SORT_PARAM_KEY_NAME, value = \"排序表达式,格式:<+ | -><排序字段>;多个字段排序采用“,”分割\", paramType = \"query\", dataType = \"string\")\n    })\n    @GetMapping(produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Page<$!{tableInfo.name}>> queryPage(@SwaggerParam QueryParameter q, @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n\t\tq.sort(getColumnMap());\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.queryPage(u, q));\n    }\n\t\n\t@ApiOperation(value = \"查询$!{tableInfo.comment}详情\", notes = \"查询$!{tableInfo.comment}详情\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\")\n    })\n    @GetMapping(value = \"{$!{pk.name}}\", produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<$!{tableInfo.name}> queryDetails(@PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name, @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.queryDetails(u, $!pk.name));\n    }\n\n    @ApiOperation(value = \"添加$!{tableInfo.comment}信息\", notes = \"添加$!{tableInfo.comment}信息\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = \"$!tool.firstLowerCase($!{tableInfo.name})\", value = \"$!{tableInfo.comment}信息\", required = true, paramType = \"body\", dataType = \"$!{tableInfo.name}\")\n    })\n\t@PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<$!pk.shortType> add(@RequestBody $!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}), @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.add(u, $!tool.firstLowerCase($!{tableInfo.name})));\n    }\n\t\n\t@ApiOperation(value = \"修改$!{tableInfo.comment}信息-全部字段\", notes = \"修改$!{tableInfo.comment}信息-全部字段\")\n    @ApiImplicitParams(value = {\n\t\t@ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\"),\n        @ApiImplicitParam(name = \"$!tool.firstLowerCase($!{tableInfo.name})\", value = \"$!{tableInfo.comment}信息\", required = true, paramType = \"body\", dataType = \"$!{tableInfo.name}\")\n    })\n    @PutMapping(value = \"{$!{pk.name}}\", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Boolean> editAll(@PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name, @RequestBody $!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}), @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.editAll(u, $!{pk.name}, $!tool.firstLowerCase($!{tableInfo.name})));\n    }\n\t\n\t@ApiOperation(value = \"修改$!{tableInfo.comment}信息-有的字段\", notes = \"修改$!{tableInfo.comment}信息-有的字段\")\n    @ApiImplicitParams(value = {\n\t\t@ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\"),\n        @ApiImplicitParam(name = \"$!tool.firstLowerCase($!{tableInfo.name})\", value = \"$!{tableInfo.comment}信息\", required = true, paramType = \"body\", dataType = \"$!{tableInfo.name}\")\n    })\n    @PatchMapping(value = \"{$!{pk.name}}\", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Boolean> edit(@PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name, @RequestBody $!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}), @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.edit(u, $!{pk.name}, $!tool.firstLowerCase($!{tableInfo.name})));\n    }\n\t\n\t@ApiOperation(value = \"删除$!{tableInfo.comment}\", notes = \"删除$!{tableInfo.comment}\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\")\n    })\n    @DeleteMapping(value = \"{$!{pk.name}}\", produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Boolean> remove(@PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name, @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.remove(u, $!pk.name));\n    }\n\t\n\t@ApiOperation(value = \"批量删除$!{tableInfo.comment}\", notes = \"批量删除$!{tableInfo.comment}\")\n    @ApiImplicitParams(value = {\n         @ApiImplicitParam(name = \"$!{pk.name}s\", value = \"${pk.comment}\", paramType = \"query\", allowMultiple = true, dataType = \"$!pk.shortType\")\n    })\n    @DeleteMapping(produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Integer> removeMulti(@RequestParam(value = \"$!{pk.name}s\") List<$!pk.shortType> $!{pk.name}s, @UserParam AuthorizationUser<?, ?, ?, ?> u) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.removeMulti(u, $!{pk.name}s));\n    }\n\n\t@Override\n    public Map<String, String> getColumnMap() {\n        return SORT_COLUMN_MAP;\n    }\n\t\n    private static final Map<String,String> SORT_COLUMN_MAP = new HashMap<String,String>(){{\n#foreach($column in $tableInfo.fullColumn)\n        put(\"$!{column.name}\", $!{tableInfo.name}Service.$!{column.name});\n#end\n    }};\n}\n"
      } ]
    },
    "ESS-MVC-ST-API" : {
      "name" : "ESS-MVC-ST-API",
      "elementList" : [ {
        "name" : "Define.xml.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入mybatis支持\n$!{mybatisSupport.vm}\n##引入init支持\n$!{init.vm}\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"DefineMapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper/$!{tableInfo.name}\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.name}Define\">\n\n\t<!--添加数据开始-->\n\t<sql id=\"insertDefine\">\n\t\tinsert into $!{tableInfo.obj.name} \n\t\t<trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\n#if(!($!{pk.shortType}=='Long' || $!{pk.shortType}=='Integer'))\n\t\t\t$!pk.obj.name,\n#end\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t<if test=\"$!{column.name} != null\">$!{column.obj.name},</if>\n#end\n\t\t</trim>\n\t\t<trim prefix=\"VALUES (\" suffix=\")\" suffixOverrides=\",\">\n#if(!($!{pk.shortType}=='Long' || $!{pk.shortType}=='Integer'))\n\t\t\t#{$!pk.name},\n#end\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t<if test=\"$!{column.name} != null\">#{$!{column.name}},</if>\n#end\n\t\t</trim>\n\t</sql>\n\t<!--添加数据结束-->\n\n\t<!--修改数据开始-->\n\t<sql id=\"updateDefine\">\n\t\tupdate $!{tableInfo.obj.name} \n\t\t<set>\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t<if test=\"m.$!{column.name} != null\">$!{column.obj.name} = #{m.$!{column.name}},</if>\n#end\n\t\t</set>\n\t\twhere $!pk.obj.name = #{k}\n\t</sql>\n\t<!--修改数据结束-->\n\n\t<!--全量修改数据开始-->\n\t<sql id=\"updateAllDefine\">\n\t\tupdate $!{tableInfo.obj.name} \n\t\t<set>\n#foreach($column in $tableInfo.otherColumn)\n\t\t\t$!{column.obj.name} = #{m.$!{column.name}},\n#end\n\t\t</set>\n\t\twhere $!pk.obj.name = #{k}\n\t</sql>\n\t<!--全量修改数据结束-->\n\t\n\t<!--删除数据开始-->\n\t<sql id=\"deleteDefine\">\n\t\tdelete from $!{tableInfo.obj.name} where $!pk.obj.name = #{k}\n\t</sql>\n\t<!--删除数据结束-->\n\t\n    <!--批量删除数据开始-->\n    <sql id=\"deleteMultiDefine\">\n        delete from $!{tableInfo.obj.name} \n        <where>\n            <if test=\"ks != null\">\n                $!pk.obj.name in\n                <foreach collection=\"ks\" item=\"k\" index=\"no\" open=\"(\" separator=\",\" close=\")\">\n                    #{k}\n                </foreach>\n            </if>\n            <if test=\"ks == null\">\n                1=2\n            </if>\n        </where>\n    </sql>\n    <!--批量删除数据结束-->\n    \n</mapper>\n"
      }, {
        "name" : "Mapper.xml.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入mybatis支持\n$!{mybatisSupport.vm}\n##引入init支持\n$!{init.vm}\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"AppMapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper/$!{tableInfo.name}\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao\">\n\n\t<!--查询详情数据开始-->\n\t<select id=\"load\" parameterType=\"$!pk.Type\" resultType=\"$!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO\">\n\t\tSELECT \n\t\t\t#allSqlColumn() \n\t\t\n\t\tFROM $!{tableInfo.obj.name} \n\t\twhere $!pk.obj.name = #{k}\n\t</select>\n\t<!--查询详情数据结束-->\n\t\n\t<!--查询列表数据开始-->\n\t<select id=\"query\" parameterType=\"$!{coreBasePackage}.model.QueryParameter\" resultType=\"$!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO\">\n\t\tSELECT \n\t\t\t#allSqlColumn() \n\t\t\n\t\tFROM $!{tableInfo.obj.name} \n\t\t<where>\n\t\t\t1=1\n\t\t</where>\n\t\t ${q.sort} \n\t</select>\n\t<!--查询列表数据结束-->\n\n\t<!--查询列数量开始-->\n\t<select id=\"count\" parameterType=\"$!{coreBasePackage}.model.QueryParameter\" resultType=\"java.lang.Integer\">\n\t\tSELECT \n\t\t\tcount($!{pk.obj.name}) \n\t\tFROM $!{tableInfo.obj.name} \n\t\t<where>\n\t\t\t1=1\n\t\t</where>\n\t</select>\n\t<!--查询数量结束-->\n\t\n\t\n\t<!--新增数据开始-->\n\t<insert id=\"insert\" parameterType=\"$!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO\"#if($!{pk.shortType}=='Long' || $!{pk.shortType}=='Integer' ) useGeneratedKeys=\"true\" keyColumn=\"$!pk.obj.name\" keyProperty=\"$!pk.name\"#end>\n#if($!{pk.shortType}=='String')\n\t\t<selectKey resultType=\"java.lang.String\" keyColumn=\"$!pk.obj.name\" keyProperty=\"$!pk.name\" order=\"BEFORE\" >\n\t\t\tSELECT REPLACE(UUID(), '-', '') FROM DUAL\n\t\t</selectKey>\n#end\n\t\t<include refid=\"$!{tableInfo.name}Define.insertDefine\"/>\n\t</insert>\n\t<!--新增数据结束-->\n\n\t<!--修改数据开始-->\n\t<update id=\"update\" parameterType=\"$!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO\">\n\t\t<include refid=\"$!{tableInfo.name}Define.updateDefine\"/>\n\t</update>\n\t<!--修改数据结束-->\n\t\n\t<!--全量修改数据开始-->\n\t<update id=\"updateAll\" parameterType=\"$!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO\">\n\t\t<include refid=\"$!{tableInfo.name}Define.updateAllDefine\"/>\n\t</update>\n\t<!--全量修改数据结束-->\n\t\n    <!--删除数据开始-->\n    <delete id=\"delete\" parameterType=\"$!pk.Type\">\n        <include refid=\"$!{tableInfo.name}Define.deleteDefine\"/>\n    </delete>\n\t<!--删除数据结束-->\n\n    <!--删除数据开始-->\n    <delete id=\"deleteMulti\" parameterType=\"java.util.List\">\n        <include refid=\"$!{tableInfo.name}Define.deleteMultiDefine\"/>\n    </delete>\n\t<!--删除数据结束-->\n\t\n\t<!--通过Key集合查询列表数据开始-->\n\t<select id=\"list\" resultType=\"$!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO\">\n\t\tSELECT \n\t\t\t#allSqlColumn() \n\t\t\n\t\tFROM $!{tableInfo.obj.name} \n        <where>\n            <if test=\"ks != null\">\n                ${fn} in\n                <foreach collection=\"ks\" item=\"k\" index=\"no\" open=\"(\" separator=\",\" close=\")\">\n                    #{k}\n                </foreach>\n            </if>\n            <if test=\"ks == null\">\n                1=2\n            </if>\n        </where>\n\t</select>\n\t<!--通过Key集合查询列表数据结束-->\n\n</mapper>\n"
      }, {
        "name" : "Dao.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}Dao.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/dao\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;\n\nimport $!{coreBasePackage}.pattern.mvc.standard.dao.BaseDao;\nimport $!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO;\nimport org.apache.ibatis.annotations.Mapper;\n\n@Mapper\npublic interface $!{tableInfo.name}Dao extends BaseDao<$!pk.shortType, $!{tableInfo.name}PO> {\n}\n\n"
      }, {
        "name" : "Service.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}Service.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{coreBasePackage}.pattern.mvc.standard.service.BaseService;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO;\n\npublic interface $!{tableInfo.name}Service extends BaseService<$!pk.shortType, $!{tableInfo.name}DTO, $!{tableInfo.name}PO> {\n#foreach($column in $tableInfo.fullColumn)\n    String $!{column.name} = \"$!{column.obj.name}\";\n#end\n}\n"
      }, {
        "name" : "ServiceImpl.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}ServiceImpl.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport $!{coreBasePackage}.model.convert.ServiceConverter;\nimport $!{coreBasePackage}.pattern.mvc.standard.dao.BaseDao;\nimport $!{coreBasePackage}.pattern.mvc.standard.service.AbstractService;\nimport $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.model.convert.$!{tableInfo.name}ServiceConverter;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\n\n@Service\npublic class $!{tableInfo.name}ServiceImpl extends AbstractService<$!pk.shortType, $!{tableInfo.name}DTO, $!{tableInfo.name}PO> implements $!{tableInfo.name}Service {\n\n    @Resource\n    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;\n\n    @Override\n    public BaseDao<$!pk.shortType, $!{tableInfo.name}PO> getDao() {\n        return this.$!tool.firstLowerCase($!{tableInfo.name})Dao;\n    }\n\n    @Override\n    public ServiceConverter<$!pk.shortType, $!{tableInfo.name}DTO, $!{tableInfo.name}PO> getConverter() {\n        return $!{tableInfo.name}ServiceConverter.INSTANCE;\n    }\n}\n"
      }, {
        "name" : "Po.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}PO.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/po\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.po;\n\nimport $!{coreBasePackage}.model.po.AbstractPO;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n// $!{tableInfo.comment}-PO模型类\npublic class $!{tableInfo.name}PO extends AbstractPO<$!pk.shortType> {\n\n#if(${pk.comment})\n     // ${pk.comment}\n#end\n\tprivate $!pk.shortType $!pk.name;\n\t\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public $!pk.shortType getKey() {\n        return this.$!pk.name;\n    }\n}\n"
      }, {
        "name" : "Dto.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}DTO.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/dto\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.dto;\n\nimport $!{coreBasePackage}.model.dto.AbstractDTO;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n// $!{tableInfo.comment}-DTO模型类\npublic class $!{tableInfo.name}DTO extends AbstractDTO<$!pk.shortType> {\n\n#if(${pk.comment})\n     // ${pk.comment}\n#end\n\tprivate $!pk.shortType $!pk.name;\n\t\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public $!pk.shortType getKey() {\n        return this.$!pk.name;\n    }\n}\n"
      }, {
        "name" : "DetailVo.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}DetailVO.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/vo\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.vo;\n\nimport $!{coreBasePackage}.model.vo.AbstractDetailVO;\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n\n// $!{tableInfo.comment}-详情视图模型类\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n//@JsonInclude(JsonInclude.Include.NON_NULL)\n@ApiModel(value = \"$!{tableInfo.name}DetailVO\", description = \"$!{tableInfo.comment}-详情视图模型类\")\npublic class $!{tableInfo.name}DetailVO extends AbstractDetailVO<$!pk.shortType> {\n\n#if(${pk.comment})\n     // ${pk.comment}\n#end\n\t@ApiModelProperty(value = \"$!{pk.comment}\")\n\tprivate $!pk.shortType $!pk.name;\n\t\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n\t@ApiModelProperty(value = \"$!{column.comment}#if(${column.shortType}==\"Date\"), 格式:yyyy-MM-dd#end#if(${column.shortType}==\"Timestamp\"), 格式:yyyy-MM-dd HH:mm:ss#end\")\n#if(${column.shortType}==\"Date\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd\")\n#end\n#if(${column.shortType}==\"Timestamp\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd HH:mm:ss\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public $!pk.shortType getKey() {\n        return this.$!pk.name;\n    }\n}\n"
      }, {
        "name" : "EditVo.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}EditVO.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/vo\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.vo;\n\nimport $!{coreBasePackage}.model.vo.AbstractEditVO;\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n\n// $!{tableInfo.comment}-修改视图模型类\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n//@JsonInclude(JsonInclude.Include.NON_NULL)\n@ApiModel(value = \"$!{tableInfo.name}EditVO\", description = \"$!{tableInfo.comment}-修改视图模型类\")\npublic class $!{tableInfo.name}EditVO extends AbstractEditVO<$!pk.shortType> {\n\n#if(${pk.comment})\n     // ${pk.comment}\n#end\n\t@ApiModelProperty(value = \"$!{pk.comment}\")\n\tprivate $!pk.shortType $!pk.name;\n\t\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n\t@ApiModelProperty(value = \"$!{column.comment}#if(${column.shortType}==\"Date\"), 格式:yyyy-MM-dd#end#if(${column.shortType}==\"Timestamp\"), 格式:yyyy-MM-dd HH:mm:ss#end\")\n#if(${column.shortType}==\"Date\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd\")\n#end\n#if(${column.shortType}==\"Timestamp\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd HH:mm:ss\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public $!pk.shortType getKey() {\n        return this.$!pk.name;\n    }\n}\n"
      }, {
        "name" : "ListVo.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}ListVO.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/vo\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.vo;\n\nimport $!{coreBasePackage}.model.vo.AbstractListVO;\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n\n// $!{tableInfo.comment}-列表视图模型类\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n//@JsonInclude(JsonInclude.Include.NON_NULL)\n@ApiModel(value = \"$!{tableInfo.name}ListVO\", description = \"$!{tableInfo.comment}-列表视图模型类\")\npublic class $!{tableInfo.name}ListVO extends AbstractListVO<$!pk.shortType> {\n\n#if(${pk.comment})\n     // ${pk.comment}\n#end\n\t@ApiModelProperty(value = \"$!{pk.comment}\")\n\tprivate $!pk.shortType $!pk.name;\n\t\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n\t@ApiModelProperty(value = \"$!{column.comment}#if(${column.shortType}==\"Date\"), 格式:yyyy-MM-dd#end#if(${column.shortType}==\"Timestamp\"), 格式:yyyy-MM-dd HH:mm:ss#end\")\n#if(${column.shortType}==\"Date\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd\")\n#end\n#if(${column.shortType}==\"Timestamp\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd HH:mm:ss\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public $!pk.shortType getKey() {\n        return this.$!pk.name;\n    }\n}\n"
      }, {
        "name" : "AddVo.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}AddVO.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/vo\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.vo;\n\nimport $!{coreBasePackage}.model.vo.AbstractAddVO;\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.*;\nimport java.util.Date;\nimport java.time.LocalTime;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@EqualsAndHashCode(callSuper = false)\n//@JsonInclude(JsonInclude.Include.NON_NULL)\n@ApiModel(value = \"$!{tableInfo.name}AddVO\", description = \"$!{tableInfo.comment}-新增视图模型类\")\npublic class $!{tableInfo.name}AddVO extends AbstractAddVO<Void> {\n\n#foreach($column in $tableInfo.otherColumn)\n#if(${column.comment})\n     // ${column.comment}\n#end\n\t@ApiModelProperty(value = \"$!{column.comment}#if(${column.shortType}==\"Date\"), 格式:yyyy-MM-dd#end#if(${column.shortType}==\"Timestamp\"), 格式:yyyy-MM-dd HH:mm:ss#end\")\n#if(${column.shortType}==\"Date\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd\")\n#end\n#if(${column.shortType}==\"Timestamp\")\n    @JsonFormat(timezone = \"GMT+8\", pattern = \"yyyy-MM-dd HH:mm:ss\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n    @Override\n    public Void getKey() {\n        return null;\n    }\n}\n"
      }, {
        "name" : "ControllerConverter.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}ControllerConverter.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/convert\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.convert;\n\n\nimport $!{coreBasePackage}.model.convert.ControllerConverter;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}AddVO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}DetailVO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}EditVO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}ListVO;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface $!{tableInfo.name}ControllerConverter extends ControllerConverter<$!pk.shortType, $!{tableInfo.name}DetailVO, $!{tableInfo.name}ListVO, $!{tableInfo.name}AddVO, $!{tableInfo.name}EditVO,$!{tableInfo.name}DTO> {\n    $!{tableInfo.name}ControllerConverter INSTANCE = Mappers.getMapper($!{tableInfo.name}ControllerConverter.class);\n}\n"
      }, {
        "name" : "ServiceConverter.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}ServiceConverter.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/model/convert\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}model.convert;\n\n\nimport $!{coreBasePackage}.model.convert.ServiceConverter;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.model.po.$!{tableInfo.name}PO;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface $!{tableInfo.name}ServiceConverter extends ServiceConverter<$!pk.shortType, $!{tableInfo.name}DTO, $!{tableInfo.name}PO> {\n    $!{tableInfo.name}ServiceConverter INSTANCE = Mappers.getMapper($!{tableInfo.name}ServiceConverter.class);\n}"
      }, {
        "name" : "Controller.java.vm",
        "code" : "##引入基本设置\n$!{stApiSetting.vm}\n##引入init支持\n$!{init.vm}\n##引入宏定义\n$!{define.vm}\n\n$!callback.setFileName($tool.append($tableName, \"$!{tableInfo.name}Controller.java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport $!{coreBasePackage}.argument.SwaggerParam;\nimport $!{coreBasePackage}.argument.UserParam;\nimport $!{coreBasePackage}.model.Page;\nimport $!{coreBasePackage}.model.QueryParameter;\nimport $!{coreBasePackage}.model.ResponseModel;\nimport $!{coreBasePackage}.model.convert.ControllerConverter;\nimport $!{coreBasePackage}.pattern.mvc.standard.controller.BaseRest;\nimport $!{coreBasePackage}.sercurity.AuthorizationUser;\nimport $!{tableInfo.savePackageName}.model.convert.$!{tableInfo.name}ControllerConverter;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}AddVO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}DetailVO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}EditVO;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}ListVO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiImplicitParam;\nimport io.swagger.annotations.ApiImplicitParams;\nimport io.swagger.annotations.ApiOperation;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.PatchMapping;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RestController;\nimport javax.annotation.Resource;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@Api(value = \"$!{tableInfo.name}Controller\", tags = {\"$!{tableInfo.comment}-接口\"})\n@RequestMapping(\"$!tool.firstLowerCase($!{tableInfo.name})s\")\n@Slf4j\npublic class $!{tableInfo.name}Controller implements BaseRest<$!pk.shortType, $!{tableInfo.name}DetailVO, $!{tableInfo.name}ListVO, $!{tableInfo.name}AddVO, $!{tableInfo.name}EditVO, $!{tableInfo.name}DTO> {\n\t\n\t@Resource\n    private $!{tableInfo.name}Service $!tool.firstLowerCase($!{tableInfo.name})Service;\n\t\n\t@ApiOperation(value = \"查询$!{tableInfo.comment}列表\", notes = \"查询$!{tableInfo.comment}列表\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = Page.PAGE_NUM_PARAM_NAME, value = \"页序号\", paramType = \"query\", dataType = \"Int\"),\n        @ApiImplicitParam(name = Page.PAGE_SIZE_PARAM_NAME, value = \"页大小\", paramType = \"query\", dataType = \"Int\"),\n\t\t@ApiImplicitParam(name = QueryParameter.SORT_PARAM_KEY_NAME, value = \"排序表达式,格式:<+ | -><排序字段>;多个字段排序采用“,”分割\", paramType = \"query\", dataType = \"string\")\n    })\n    @GetMapping(produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Page<$!{tableInfo.name}ListVO>> queryPage(@UserParam AuthorizationUser<?, ?,?, ?> u, @SwaggerParam QueryParameter q) throws Exception {\n\t\tq.sort(getColumnMap());\n        return ResponseModel.success(getConverter().dtoToLv($!{tool.firstLowerCase($!{tableInfo.name})}Service.queryPage(u, q)));\n    }\n\t\n\t@ApiOperation(value = \"查询$!{tableInfo.comment}详情\", notes = \"查询$!{tableInfo.comment}详情\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\")\n    })\n    @GetMapping(value = \"{$!{pk.name}}\", produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<$!{tableInfo.name}DetailVO> queryDetails(@UserParam AuthorizationUser<?, ?,?, ?> u, @PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name) throws Exception {\n        return ResponseModel.success(getConverter().dtoToDv($!{tool.firstLowerCase($!{tableInfo.name})}Service.queryDetails(u, $!pk.name)));\n    }\n\n    @ApiOperation(value = \"添加$!{tableInfo.comment}信息\", notes = \"添加$!{tableInfo.comment}信息\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = \"$!tool.firstLowerCase($!{tableInfo.name})\", value = \"$!{tableInfo.comment}信息\", required = true, paramType = \"body\", dataType = \"$!{tableInfo.name}AddVO\")\n    })\n\t@PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<$!pk.shortType> add(@UserParam AuthorizationUser<?, ?,?, ?> u, @RequestBody $!{tableInfo.name}AddVO $!tool.firstLowerCase($!{tableInfo.name})) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.add(u, getConverter().avToDto($!tool.firstLowerCase($!{tableInfo.name}))));\n    }\n\t\n\t@ApiOperation(value = \"修改$!{tableInfo.comment}信息-全部字段\", notes = \"修改$!{tableInfo.comment}信息-全部字段\")\n    @ApiImplicitParams(value = {\n\t\t@ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\"),\n        @ApiImplicitParam(name = \"$!tool.firstLowerCase($!{tableInfo.name})\", value = \"$!{tableInfo.comment}信息\", required = true, paramType = \"body\", dataType = \"$!{tableInfo.name}EditVO\")\n    })\n    @PutMapping(value = \"{$!{pk.name}}\", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Boolean> editAll(@UserParam AuthorizationUser<?, ?,?, ?> u, @PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name, @RequestBody $!{tableInfo.name}EditVO $!tool.firstLowerCase($!{tableInfo.name})) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.editAll(u, $!{pk.name}, getConverter().evToDto($!tool.firstLowerCase($!{tableInfo.name}))));\n    }\n\t\n\t@ApiOperation(value = \"修改$!{tableInfo.comment}信息-有的字段\", notes = \"修改$!{tableInfo.comment}信息-有的字段\")\n    @ApiImplicitParams(value = {\n\t\t@ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\"),\n        @ApiImplicitParam(name = \"$!tool.firstLowerCase($!{tableInfo.name})\", value = \"$!{tableInfo.comment}信息\", required = true, paramType = \"body\", dataType = \"$!{tableInfo.name}EditVO\")\n    })\n    @PatchMapping(value = \"{$!{pk.name}}\", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Boolean> edit(@UserParam AuthorizationUser<?, ?,?, ?> u, @PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name, @RequestBody $!{tableInfo.name}EditVO $!tool.firstLowerCase($!{tableInfo.name})) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.edit(u, $!{pk.name}, getConverter().evToDto($!tool.firstLowerCase($!{tableInfo.name}))));\n    }\n\t\n\t@ApiOperation(value = \"删除$!{tableInfo.comment}\", notes = \"删除$!{tableInfo.comment}\")\n    @ApiImplicitParams(value = {\n        @ApiImplicitParam(name = \"$!pk.name\", value = \"${pk.comment}\", paramType = \"path\", dataType = \"$!pk.shortType\")\n    })\n    @DeleteMapping(value = \"{$!{pk.name}}\", produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Boolean> remove(@UserParam AuthorizationUser<?, ?,?, ?> u, @PathVariable(value = \"$!pk.name\") $!pk.shortType $!pk.name) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.remove(u, $!pk.name));\n    }\n\t\n\t@ApiOperation(value = \"批量删除$!{tableInfo.comment}\", notes = \"批量删除$!{tableInfo.comment}\")\n    @ApiImplicitParams(value = {\n         @ApiImplicitParam(name = \"$!{pk.name}s\", value = \"${pk.comment}\", paramType = \"query\", allowMultiple = true, dataType = \"$!pk.shortType\")\n    })\n    @DeleteMapping(produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseModel<Integer> removeMulti(@UserParam AuthorizationUser<?, ?,?, ?> u, @RequestParam(value = \"$!{pk.name}s\") List<$!pk.shortType> $!{pk.name}s) throws Exception {\n        return ResponseModel.success($!{tool.firstLowerCase($!{tableInfo.name})}Service.removeMulti(u, $!{pk.name}s));\n    }\n\n    @Override\n    public ControllerConverter<String, $!{tableInfo.name}DetailVO, $!{tableInfo.name}ListVO, $!{tableInfo.name}AddVO, $!{tableInfo.name}EditVO, $!{tableInfo.name}DTO> getConverter() {\n        return $!{tableInfo.name}ControllerConverter.INSTANCE;\n    }\n\t\n\t@Override\n    public Map<String, String> getColumnMap() {\n        return SORT_COLUMN_MAP;\n    }\n\t\n    private static final Map<String,String> SORT_COLUMN_MAP = new HashMap<String, String>(){{\n#foreach($column in $tableInfo.fullColumn)\n        put(\"$!{column.name}\", $!{tableInfo.name}Service.$!{column.name});\n#end\n    }};\n}\n"
      } ]
    },
    "ESS-MVC-PRO" : {
      "name" : "ESS-MVC-PRO",
      "elementList" : [ {
        "name" : "application.yaml.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"application.yaml\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/resources\"))\nserver:\n  port: $!{projectApplicationPort}\n  servlet:\n    context-path: /\nspring:\n  application:\n    name: $!{projectEnName}\n  profiles:\n    active: dev\n  mvc:\n    throw-exception-if-no-handler-found: true\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  web:\n    resources:\n      add-mappings: false\n\n\nmybatis:\n  config-location: classpath:mybatis-config.xml\n  type-aliases-package: $!{projectBasePackage}.modules.*.model.*;\n  mapper-locations: classpath:mapper/**/*.xml\n\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n"
      }, {
        "name" : "application-dev.yaml.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"application-dev.yaml\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/resources\"))\nlogging:\n  config: classpath:log/logback-spring.xml\n  file:\n    path: ../logs\n  level:\n    root: info\n  logback:\n    rolling-policy:\n      max-file-size: 100MB\n      max-history: 10\n      total-size-cap: 20GB\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    url: jdbc:mysql://$!{projectDbIp}:$!{projectDbPort}/$!{projectDbDbName}?useUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai&useSSL=false\n    username: $!{projectDbUsername}\n    password: $!{projectDbPassword}\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n"
      }, {
        "name" : "application-prod.yaml.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"application-prod.yaml\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/resources\"))\nlogging:\n  config: classpath:log/logback-spring.xml\n  file:\n    path: ../logs\n  level:\n    root: info\n  logback:\n    rolling-policy:\n      max-file-size: 100MB\n      max-history: 10\n      total-size-cap: 20GB\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    url: jdbc:mysql://$!{projectDbIp}:$!{projectDbPort}/$!{projectDbDbName}?useUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai&useSSL=false\n    username: $!{projectDbUsername}\n    password: $!{projectDbPassword}\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n"
      }, {
        "name" : "mybatis-config.xml.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"mybatis-config.xml\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/resources\"))\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n  <settings>\n    <!--驼峰映射-->\n    <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/>\n    <!-- 打印mybatis的信息 -->\n    <setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>\n    <!--设置Executor：SIMPLE、REUSE、BATCH   -->\n    <setting name=\"defaultExecutorType\" value=\"REUSE\"/>\n  </settings>\n</configuration>\n\n"
      }, {
        "name" : "AccessAspect.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"AccessAspect.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/aop\"))\npackage $!{projectBasePackage}.aop;\n\nimport $!{coreBasePackage}.aop.AbstractAspect;\nimport lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\nimport org.springframework.stereotype.Component;\n\nimport javax.servlet.http.HttpServletRequest;\n\n\n@Slf4j\n@Component\n@Aspect\npublic class AccessAspect extends AbstractAspect {\n\n    @Override\n    public void postProcess(long startTime, long endTime, Object result, HttpServletRequest request) throws Exception {\n    }\n\n    @Override\n    public void preProcess(HttpServletRequest req) throws Exception {\n        String uri = req.getRequestURI();\n        log.info(\"访问路径:\" + uri);\n    }\n\n\n    @Pointcut(\"execution(* $!{projectBasePackage}.modules.*.controller..*.*(..))\")\n    public void pointcut() {\n    }\n}\n"
      }, {
        "name" : "SpringConfiguration.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"SpringConfiguration.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/conf/spring\"))\npackage $!{projectBasePackage}.conf.spring;\n\nimport $!{coreBasePackage}.conf.spring.AbstractSpringConfiguration;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\n\n@Configuration\npublic class SpringConfiguration extends AbstractSpringConfiguration {\n    @Override\n    public void addCustomResourceHandlers(ResourceHandlerRegistry registry) {\n\n    }\n\n    @Override\n    public boolean isCors() {\n        return true;\n    }\n}\n"
      }, {
        "name" : "SwaggerConfiguration.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"SwaggerConfiguration.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/conf/swagger\"))\npackage $!{projectBasePackage}.conf.swagger;\n\nimport $!{coreBasePackage}.conf.swagger.AbstractSwaggerConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n@Configuration\n// @Profile(value = \"dev\")\n@EnableSwagger2\npublic class SwaggerConfiguration extends AbstractSwaggerConfiguration {\n    @Bean\n    public Docket creatDocket() {\n        Docket docket = createDocket(\n                \"$!{projectCnName}\",\n                \"$!{projectBasePackage}.modules\",\n                \"$!{projectVersion}\",\n                null\n        );\n        return docket;\n    }\n}\n\n"
      }, {
        "name" : "ExceptionAdvice.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"ExceptionConfiguration.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/conf/exception\"))\npackage $!{projectBasePackage}.exception;\n\n\nimport $!{coreBasePackage}.core.conf.exception.AbstractExceptionConfiguration;\nimport org.springframework.web.bind.annotation.ControllerAdvice;\n\n@ControllerAdvice\npublic class ExceptionConfiguration extends AbstractExceptionConfiguration {\n\n}\n"
      }, {
        "name" : "AppLaunch.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"AppLaunch.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}\"))\npackage $!{projectBasePackage};\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\n@Slf4j\npublic class AppLaunch {\n\n    public static void main( String[] args ){\n        log.info(\"-----------------------服务启动开始-----------------------\");\n        SpringApplication.run(AppLaunch.class, args);\n        log.info(\"-----------------------服务启动结束-----------------------\");\n\n    }\n\n}"
      }, {
        "name" : "pom.xml.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"pom.xml\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"\"))\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <groupId>com.ess</groupId>\n        <artifactId>easy-spring-staging</artifactId>\n        <version>1.0-SNAPSHOT</version>\n        <relativePath>../pom.xml</relativePath>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>$!{projectEnName}</artifactId>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.ess</groupId>\n            <artifactId>easy-spring-staging-core</artifactId>\n            <version>1.0-SNAPSHOT</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-tomcat</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-bootstrap</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-undertow</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.jboss.xnio</groupId>\n            <artifactId>xnio-nio</artifactId>\n        </dependency>\n\n        <!-- mysql 依赖定义开始-->\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>${mysql-version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid-spring-boot-starter</artifactId>\n        </dependency>\n        <!-- mysql 依赖定义结束-->\n        <!-- mybatis 依赖定义开始-->\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n        </dependency>\n        <!-- mybatis 依赖定义结束-->\n        <!-- 分页 依赖定义开始-->\n        <dependency>\n            <groupId>com.github.pagehelper</groupId>\n            <artifactId>pagehelper-spring-boot-starter</artifactId>\n        </dependency>\n        <!-- 分页 依赖定义开始-->\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger2</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger-ui</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-models</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct-processor</artifactId>\n            <scope>provided</scope>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
      }, {
        "name" : "modulesReadMe.txt.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"ReadMe.txt\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/modules\"))\n\n应用代码请在该包下进行分模块组织\n"
      }, {
        "name" : "logback-spring.xml.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"logback-spring.xml\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/resources/log\"))\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration debug=\"true\" scan=\"true\" scanPeriod=\"1 minutes\">\n    <springProperty name=\"serviceName\" scope=\"context\" source=\"spring.application.name\"/>\n    <springProperty name=\"logDir\" scope=\"context\" source=\"logging.file.path\"/>\n    <springProperty name=\"maxFileSize\" scope=\"context\" source=\"logging.logback.rollingpolicy.max-file-size\"/>\n    <springProperty name=\"maxHistory\" scope=\"context\" source=\"logging.logback.rollingpolicy.max-history\"/>\n    <springProperty name=\"totalSizeCap\" scope=\"context\" source=\"logging.logback.rollingpolicy.total-size-cap\"/>\n\n    <contextName>${serviceName}</contextName>\n\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder>\n            <Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"fileLog\" append=\"true\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${logDir}/${serviceName}.log</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n            <fileNamePattern>${logDir}/${serviceName}.%d{yyyyMMdd}.%i.log</fileNamePattern>\n            <maxFileSize>${maxFileSize}</maxFileSize>\n            <maxHistory>${maxHistory}</maxHistory>\n            <totalSizeCap>${totalSizeCap}</totalSizeCap>\n        </rollingPolicy>\n        <encoder>\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [ %thread ] - [ %-5level ] [ %logger{50} : %line ] - %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <root level=\"info\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"fileLog\"/>\n    </root>\n\n</configuration>"
      }, {
        "name" : "ArgumentResolverConfiguration.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"ArgumentResolverConfiguration.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/conf/argument\"))\npackage $!{projectBasePackage}.conf.argument;\n\nimport $!{coreBasePackage}.argument.AbstractUserParamArgumentResolver;\nimport $!{coreBasePackage}.conf.argument.AbstractArgumentResolverConfiguration;\nimport $!{coreBasePackage}.sercurity.AuthorizationUser;\nimport $!{coreBasePackage}.sercurity.DefaultAuthorizationUser;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.MethodParameter;\nimport org.springframework.web.context.request.NativeWebRequest;\nimport org.springframework.web.method.support.HandlerMethodArgumentResolver;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Configuration\n@EnableWebMvc\npublic class ArgumentResolverConfiguration extends AbstractArgumentResolverConfiguration {\n    /**\n     * 构建出来swagger参数外的其他参数解析器\n     * \n     * @return\n     */\n    @Override\n    public List<HandlerMethodArgumentResolver> builderArgumentResolver() {\n        List<HandlerMethodArgumentResolver> argumentResolvers = new ArrayList<>();\n        // 解析用户参数,通常通过token进行用户信息的构建1\n        AbstractUserParamArgumentResolver user = new AbstractUserParamArgumentResolver(){\n            @Override\n            public AuthorizationUser<?, ?, ?, ?> parserUser(MethodParameter parameter, NativeWebRequest webRequest) {\n                return new DefaultAuthorizationUser();\n            }\n        };\n        argumentResolvers.add(user);\n        return argumentResolvers;\n    }\n}\n"
      }, {
        "name" : "ExceptionConfiguration.java.vm",
        "code" : "##引入init支持\n$!{proSetting.vm}\n\n$!callback.setFileName(\"ExceptionConfiguration.java\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/src/main/java/$!{projectBasePath}/conf/exception\"))\npackage $!{projectBasePackage}.conf.exception;\n\n\nimport $!{coreBasePackage}.conf.exception.AbstractExceptionConfiguration;\nimport org.springframework.web.bind.annotation.ControllerAdvice;\n\n@ControllerAdvice\npublic class ExceptionConfiguration extends AbstractExceptionConfiguration {\n\n}\n\n"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : {
    "ESS" : {
      "name" : "ESS",
      "elementList" : [ {
        "name" : "define.vm",
        "value" : "##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"
      }, {
        "name" : "mybatisSupport.vm",
        "value" : "##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"
      }, {
        "name" : "init.vm",
        "value" : "##去掉表的前缀\n#if ($prefixFieldName)\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst($prefixFieldName,\"\")))\n#end\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"
      }, {
        "name" : "proSetting.vm",
        "value" : "##核心库基础包路径\n#set ($coreBasePackage = \"com.ess.core\")\n##工程英文名称\n#set ($projectEnName = \"mvc-simple-demo\")\n##工程中文名称\n#set ($projectCnName = \"mvc简单模式演示\")\n##工程版本\n#set ($projectVersion = \"1.0-SNAPSHOT\")\n##工程端口\n#set ($projectApplicationPort = \"8081\")\n##工程基础包名\n#set ($projectBasePackage = \"com.ess.demo.mvc.simple\")\n##工程基础基础路径\n#set ($projectBasePath = \"com/ess/demo/mvc/simple\")\n##工程数据库IP,端口,数据库名称,数据库用户名,数据库密码\n#set ($projectDbIp = \"192.168.126.10\")\n#set ($projectDbPort = \"3306\")\n#set ($projectDbDbName = \"easy-spring-staging-demo-db\")\n#set ($projectDbUsername = \"root\")\n#set ($projectDbPassword = \"123456\")"
      }, {
        "name" : "siApiSetting.vm",
        "value" : "## 过滤表名前缀\n#set ($prefixFieldName = \"demo_\")\n\n##核心库基础包路径\n\n#set ($coreBasePackage = \"com.ess.core\")\n"
      }, {
        "name" : "stApiSetting.vm",
        "value" : "## 过滤表名前缀\n#set ($prefixFieldName = \"demo_\")\n\n##核心库基础包路径\n\n#set ($coreBasePackage = \"com.ess.core\")\n"
      } ]
    }
  }
}